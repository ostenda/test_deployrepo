import Head from "next/head"
import RecipesList from "../components/RecipesList"
import { GetServerSideProps } from "next"
import dbConnect from "lib/dbConnect"
import Recipe from "models/Recipe"
import Ingredient from "models/Ingredient"
import Category from "models/Category"
import User from "models/User"
import { getSession } from 'next-auth/react'


export default function Home({recipes}) {
  
  return (
    <div >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <RecipesList  recipes={recipes}/>
      
      
    </div>
  )
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  await dbConnect()


  console.log('context')
  const ctx = await getSession(context)

  let user = null 
  if(ctx){

    user = await User.findOne({}).where('email').equals(ctx.user.email).lean()
    console.log(user)
  }

  require("../models/User");
  const results = await Recipe.find({}).lean().populate('author')

  const ingredient_array = []
  const category_array = []

  if(user){
    await Promise.all(
      results.map(async (result) => {
        ingredient_array.push(await Ingredient.find({}).where('recipe_id').equals(result._id).lean());
        category_array.push(await Category.find({}).where('recipe_id').equals(result._id).lean());

      })
    )
  }else{
    await Promise.all(
      results.map(async (result) => {
        ingredient_array.push(await Ingredient.find({}).where('recipe_id').equals(result._id).lean());
        category_array.push(await Category.find({}).where('recipe_id').equals(result._id).lean());
      })
    )
  }

  
  const recipes = results.map((doc, index) => (    
    {
    ...doc,
    ...{_id: doc._id.toString()},
    ...{ingredients: ingredient_array[index]},
    ...{categories: category_array[index]},
  }))

  return {props: { recipes:JSON.parse(JSON.stringify(recipes)) }}
}